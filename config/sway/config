# config for sway
# Read `man 5 sway` for a complete reference.

### Variables
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term urxvt
# Your preferred application launcher
set $menu dmenu_run

### Output configuration
# Default wallpaper (more resolutions are available in /usr/share/sway/)
output * bg /usr/share/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output LVDS-1 disable
output HDMI-A-1 resolution 1920x1080 position 0,0
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Input configuration
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input "2:7:SynPS/2_Synaptics_TouchPad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}

### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+Return exec $term

    # kill focused window
    bindsym $mod+Shift+q kill

    # start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+c reload

    # exit sway (logs you out of your wayland session)
    bindsym $mod+Shift+e exit
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 5 px or 5 ppt
    bindsym $down resize grow height 5 px or 5 ppt
    bindsym $up resize shrink height 5 px or 5 ppt
    bindsym $right resize grow width 5 px or 5 ppt

    # ditto, with arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym q mode "default"
}
bindsym $mod+r mode "resize"

# for modify volume
mode "volume" {
  bindsym j exec amixer -q set Master 2dB- unmute
  bindsym k exec amixer -q set Master 2dB+ unmute
  bindsym m exec amixer -q set Master 0%

  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym q      mode "default"
}
bindsym $mod+Shift+v mode "volume"

# TODO: make border mode?
# border
bindsym $mod+t border normal 2
bindsym $mod+y border pixel 15
bindsym $mod+u border none
bindsym $mod+Shift+b bar mode toggle

mode "wallpaper" {
  bindsym q mode "default"
  bindsym Escape mode "default"
  bindsym Return mode "default"

  bindsym n exec sh -c 'sway-bg-random.sh'
}

# TODO: consider mode selector
mode "mode_selector" {
  bindsym q mode "default"
  bindsym Escape mode "default"
  bindsym Return mode "default"

  bindsym v mode "volume"
  bindsym r mode "resize"
  bindsym w mode "wallpaper"
}
bindsym $mod+m mode "mode_selector"

### default color
# client
# class                  border      background  text      indicator   child_border
#background #ffffff
#client.focused #4c7899 #285577 #ffffff #2e9ef4 #285577
#client.focused_inactiv #333333 #5f676a #ffffff #484e50 #5f676a
#client.unfocused #333333 #222222 #888888 #292d2e #222222
#client.urgent #2f343a #900000 #ffffff #900000 #900000
#client.placeholder #000000 #0c0c0c #ffffff #000000 #0c0c0c


#default_border normal 5
# TODO: transparency
#client.focused #4c7899 #285577 #ffffff #2e9ef4 #28557700
#client.focused_inactiv #333333 #5f676a #ffffff #484e50 #5f676a00
#client.unfocused #33333300 #22222200 #888888 #292d2e #22222200


#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top
    #position bottom
    status_command i3status
    #mode hide
    #hidden_state hide
    #workspace_buttons yes
    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

### exec
exec sh -c '[ -f ~/.Xresources ] && xrdb ~/.Xresources'
exec sh -c '[ -f "$HOME"/dotfiles/etc/sway/currentsock ] && : > "$HOME"/dotfiles/etc/sway/currentsock && sync'
exec sh -c '[ -f "$HOME"/dotfiles/etc/sway/currentsock ] && echo "SWAYSOCK=$SWAYSOCK" > "$HOME"/dotfiles/etc/sway/currentsock && sync'
#exec_always sh -c '[ -x $(command -v sway-bg-random.sh) ] && sway-bg-random.sh &'

include /etc/sway/config.d/*
