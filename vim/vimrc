" vimrc

" TODO:時間が取れたら整理する
" NOTE:設定の詳細は:helpで調べればまず困らない

"-----| fileencoding |-----"
set encoding=utf-8 " vimの内部エンコード設定
scriptencoding=utf-8

"-----| plugin manage |-----"

" dein
"  if isdirectory(glob('~/.vim/dein/repos/github.com/Shougo/dein.vim'))
"    source ~/dotfiles/vim/plugin_manage_dein
"  endif

" plug
  if has('win32') || has('win64')
    set runtimepath^=~/.vim,~/.vim/after
    " linuxの設定に合わせる
  endif

  if filereadable(glob('~/.vim/autoload/plug.vim'))
    source ~/dotfiles/vim/plugin_manage_plug
  endif


"-----| basic set |-----"
  "set nocompatible " vi互換を捨てる
    " vimrcで指定の意味は無いっぽいのとhistoryが初期化される副作用がある？
    " 取りあえずコメントアウト

  set ttyfast " 高速ターミナル接続が何を指してるかわかってない
  set nomodeline " do not use modeline
  set hidden " bufferを隠せるように
  set autoread  "ファイル内容が変更されると自動で読み込む
  syntax on " シンタックスハイライト
  set helplang=ja

  set title " タイトル
  set ruler " ルーラー使用
  set number " 行番号
  "set relativenumber " 行の相対位置
  set scrolloff=2 " 表示するページの上下余白の行数

  " cursor
  set cursorcolumn " カーソル現在位置で縦を強調設定
  set cursorline " カーソル現在行の強調設定

  " indent
  set autoindent " 自動インデント
  set smartindent " スマートインデント
  set shiftwidth=2 " autoindentの幅指定

  set textwidth=0 " textの最大幅を指定しない
  set wrap " textがウィンドウに入らなければ折り返す

  " foldmethod
  set foldmethod=marker " ページの折り込みを使う
  set foldmarker={,} " 折り込みのマーカー設定
  set foldlevel=99 " デフォルトは開くように

  " showmatch
  set showmatch " 閉じ括弧の確認
  set matchpairs=(:),{:},[:],<:>

  " cmdline
  set showcmd " 入力中のvimコマンドを表示する
  set history=1000 " vimコマンドの履歴数
  set cmdheight=2 "vimコマンドラインの表示に使われる行数
  set wildmenu " vimコマンドの補完
  set wildmode=list:longest,full " 補完の挙動を指定
  set confirm " コマンド実行の確認が必要ならダイアログを出して対話する
  "set shell " vimから呼ぶシェルを設定, shell=zsh

  " search
  set incsearch " 検索コマンドでワードを打ち込む間にもマッチする
  set hlsearch " 前回の検索パターンが存在するとき、マッチテキストを強調表示
  set ignorecase " 検索パターンで大文字少文字を区別しない,置換処理のマッチに影響するため注意
  set smartcase " 検索パターンが大文字を含んでいたらignorecaseを上書きする

  " tab
  set tabstop=2 " tabをエディタ内でいくつの空白として表示するか設定
  set expandtab " vimでtabを挿入した時tabをスペースとして挿入
  set softtabstop=2 " tabを幾つの空白で置き換えるか
  set backspace=indent,eol,start " バックスペースで特殊文字を削除できるように

  set list " 不可視文字の表示設定
  set listchars=tab:>-,trail:-,nbsp:%,extends:>,precedes:< ",eol:↵
    " listの表示文字を指定している

  " statusline
  set laststatus=2 " 最下層ウィンドウに何時ステータス行を表示するか、2は常に表示
  set statusline=%f%m%r%w%y%{&fileencoding}[%{&fileformat}]%=%(buf[%n]hex[%4B]line[%4l/%4L:%4P]%)
    " %[n]?[.] の形式で指定してる、詳細は:help statuslineで確認
    " use airline. 上の設定はプラグインが効かないときだけ

  " tabline
  set showtabline=2 " tablineを常に表示
  set tabline=%t " statuslineと同じように設定できる
    " use airline. 上の設定はプラグインが効かないときだけ

  "backup
  set nobackup " backupを残さない
  set writebackup " backup設定、書き込み前にbackupが作られ、書き込み成功後は消される
  set backupdir=~/dotfiles/vim/tmp/backup
    " NOTE:作成されているバックアップを残したいときは :set backup :set nowritebackup

  "undo
  set noundofile " undo設定
  set undodir=~/dotfiles/vim/tmp/undo

  "swp
  set noswapfile " swapfile設定
  set directory=~/dotfiles/vim/tmp/swap

  " New splits open to right and bottom
  set splitbelow " split時カレントウィンドウの下に分割
  set splitright " vsplit時カレントウィンドウの横に分割

  " visualbell
  set visualbell
  set t_vb=
    " set visualbell でbeep音を画面のフラッシュと置き換える
    " t_vb= でフラッシュのターミナルコードを空指定してフラッシュさせない

  " set has win
  if has('win32') || has('win64')
    set nocursorline
    set nocursorcolumn
  endif


"-----| color |-----"
" NOTE:シェルの設定で大きく変わるのでlocalで設定するか分岐を作った方がいいかも
  set t_Co=256
  set background=dark
  "set background=light
  "colorscheme desert
  "colorscheme elflord
  "colorscheme ron
  "colorscheme solarized
  colorscheme hybrid

  " set has win
  if has('win32') || has('win64')
    set t_Co=16
    colorscheme desert
  endif

"-----| key map  |-----"
" NOTE:defaultのマップは :help index.txt で確認できる
" NOTE:user定義のマップは :imap :nmap :vmap :map :verbose map で確認できる

  " jjでノーマルモードに
  inoremap jj <Esc>

  " インサートモードの前後移動
  " TODO:使い難い、もう少し考える
  "" inoremap <C-g>h   <left>
  "" inoremap <C-g>l   <right>

  " Resize window
  noremap <up>    <C-w>+
  noremap <down>  <C-w>-
  noremap <left>  <C-w><
  noremap <right> <C-w>>

  " 行を上下に引っ張る
  noremap <C-j>    ddp
  noremap <C-k>    ddkP
    " NOTE:上の<C-k>はファイルの先頭で入れると行が消える、挙動の理由がよくわかってない

  " 閉じ括弧
  inoremap {} {}<left>
  inoremap () ()<left>
  inoremap [] []<left>
  inoremap <> <><left>
  inoremap "" ""<left>
  inoremap '' ''<left>

  inoremap {<enter> {}<left><enter><bs><esc><S-o>
  inoremap {<nl> {}<left><nl><bs><esc><S-o>
    " NOTE:{}だけ挙動が違う、なぜかよくわかってない

  inoremap (<enter> ()<left><enter><esc><S-o>
  inoremap (<nl> ()<left><nl><esc><S-o>

  inoremap [<enter> []<left><enter><esc><S-o>
  inoremap [<nl> []<left><nl><esc><S-o>
    " NOTE:<enter>と<nl>の違いがいまいちわかってない、
    " NOTE:改行コードが入力された時が<nl>でenterが押された時が<enter>ということだろうか?

"-----eof
